#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass scrbook
\begin_preamble

\end_preamble
\use_default_options true
\master Thesis_CDCL_SAT_Solver.lyx
\maintain_unincluded_children false
\language ngerman
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family sfdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command biber
\index_command default
\paperfontsize 12
\spacing onehalf
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine biblatex
\cite_engine_type authoryear
\biblatex_bibstyle numeric
\biblatex_citestyle numeric
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\secnumdepth 3
\tocdepth 1
\paragraph_separation indent
\paragraph_indentation 0bp
\is_math_indent 0
\math_numbering_side default
\quotes_style german
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Auswertung der Implementierung
\end_layout

\begin_layout Paragraph
In diesem Kapitel wird die Richtigkeit des SAT-Solvers mit dem PicoSAT-Solver
 verglichen.
 Nach dem Vergleich wird eine Auswertungen der Zeiten für das Lösen von
 SAT-Problemen erstellt, wobei die Implementierung mit zChaff und MiniSAT
 verglichen wird.
\end_layout

\begin_layout Section
Vergleich mit PicoSAT
\end_layout

\begin_layout Standard
\noindent
\align block
Um auf die Richtigkeit der Implementierung zu Prüfen, wird der SAT-Solver
 gegen den PicoSAT-Solver geprüft.
 Der PicoSAT-Solver wurde hierfür ausgewählt, weil dieser eine einfache
 Anbindung zu Haskell besitzt.
 Zur Generieren der Tests wird das Haskellpaket Test.QuickCheck und die Unterkomp
onente Test.QuickCheck.Monadic verwendet.
 
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

prop_picoSATcomparison :: [[NonZero Int]] -> Property
\end_layout

\begin_layout Plain Layout

prop_picoSATcomparison cl = withMaxSuccess 10000 $ monadicIO $ do
\end_layout

\begin_layout Plain Layout

  let clauses = coerce cl
\end_layout

\begin_layout Plain Layout

  picoSol <- run (PicoSAT.solve clauses)
\end_layout

\begin_layout Plain Layout

  let cdclSol = cdcl (map (map fromIntegral) clauses) False False
\end_layout

\begin_layout Plain Layout

  assert ( case (picoSol, cdclSol) of
\end_layout

\begin_layout Plain Layout

             (PicoSAT.Unsatisfiable, UNSAT) -> True
\end_layout

\begin_layout Plain Layout

             (PicoSAT.Unknown, _)           -> False
\end_layout

\begin_layout Plain Layout

             (PicoSAT.Solution _, SAT _)    -> True
\end_layout

\begin_layout Plain Layout

             _                              -> False )
\end_layout

\begin_layout Plain Layout

\begin_inset Caption Standard

\begin_layout Plain Layout
Code zum Vergleich der Richtigkeit der Implementierung
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die Funktion erstellt zufällig 10000 verschiedene Probleme, wobei die SAT-Solver
 die generierten Probleme auf ihre Ergebnisse vergleichsweise prüfen.
 Dabei werden die SAT-Instanzen auf vier verschiedene Fälle verglichen.
 Wenn beide Solver entsprechende Ergebnisse mit UNSAT für ein Problem melden,
 so ist der Test für diese eine Instanz erfolgreich.
 Dies ist auch der Fall, wenn PicoSAT Solution [Integer] und die Implementierung
 SAT TupleList als Ergebnis ausrechnen.
 Falls PicoSAT ein Unknown Ergebnis kalkuliert oder keine der beiden ersten
 genannten Fälle in einem SAT-Problem ausgerechnet werden, so wird der Test
 als fehlgeschlagen ausgewertet.
 Wenn ein einziger Test dabei fehlschlägt, so wird der ganze Test abgebrochen
 und meldet eine fehlerhafte Implementierung für den entsprechenden Fall.
\end_layout

\begin_layout Standard
Mit der Eingabe des Befehls 
\begin_inset Quotes gld
\end_inset

stack test
\begin_inset Quotes grd
\end_inset

 in der Kommando-Zeile innerhalb des Implementierungsordners wird der Test
 gestartet.
 
\end_layout

\end_body
\end_document
