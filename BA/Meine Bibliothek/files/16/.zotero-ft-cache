

    Documents
    Authors
    Tables

    Log in
    Sign up
    MetaCart
    DMCA
    Donate

CiteSeerX logo
Documents:
Advanced Search Include Citations
DMCA
The complexity of theorem-proving procedures (1971)
Cached

    Download as a PDF

Download Links

    [www.inf.unibz.it]
    [www.inf.unibz.it]
    [www.inf.unibz.it]

    Other Repositories/Bibliography
    DBLP

    Save to List
    Add to Collection
    Correct Errors
    Monitor Changes

by Stephen A. Cook
Venue:	IN STOC
Citations:	1049 - 5 self

    Summary
    Citations
    Active Bibliography
    Co-citation
    Clustered Documents
    Version History

BibTeX

@INPROCEEDINGS{Cook71thecomplexity,
    author = {Stephen A. Cook},
    title = {The complexity of theorem-proving procedures},
    booktitle = {IN STOC},
    year = {1971},
    pages = {151--158},
    publisher = {ACM}
}
Share
Facebook 	Twitter 	Reddit 	Bibsonomy
OpenURL
 
Abstract

It is shown that any recognition problem solved by a polynomial time-bounded nondeterministic Turing machine can be “reduced” to the problem of determining whether a given propositional formula is a tautology. Here “reduced ” means, roughly speaking, that the first problem can be solved deterministically in polynomial time provided an oracle is available for solving the second. From this notion of reducible, polynomial degrees of difficulty are defined, and it is shown that the problem of determining tautologyhood has the same polynomial degree as the problem of determining whether the first of two given graphs is isomorphic to a subgraph of the second. Other examples are discussed. A method of measuring the complexity of proof procedures for the predicate calculus is introduced and discussed. Throughout this paper, a set of strings 1 means a set of strings on some fixed, large, finite alphabet Σ. This alphabet is large enough to include symbols for all sets described here. All Turing machines are deterministic recognition devices, unless the contrary is explicitly stated.
Keyphrases

theorem-proving procedure     polynomial degree     many proposition symbol     binary notation     polynomial re-reducibility     predicate calculus     polynomial time     propositional formula     finite alphabet     turing machine     propositional calculus     first problem     proof procedure     deterministic recognition device     polynomial time-bounded nondeterministic turing machine     recognition problem    
Powered by: Apache Solr

    About CiteSeerX
    Submit and Index Documents
    Privacy Policy
    Help
    Data
    Source
    Contact Us

Developed at and hosted by The College of Information Sciences and Technology

© 2007-2019 The Pennsylvania State University
