#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass scrbook
\use_default_options true
\master Thesis_CDCL_SAT_Solver.lyx
\maintain_unincluded_children false
\language ngerman
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family sfdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command biber
\index_command default
\paperfontsize 12
\spacing onehalf
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine biblatex
\cite_engine_type authoryear
\biblatex_bibstyle numeric
\biblatex_citestyle numeric
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\secnumdepth 3
\tocdepth 1
\paragraph_separation indent
\paragraph_indentation 0bp
\is_math_indent 0
\math_numbering_side default
\quotes_style german
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Algorithmen
\end_layout

\begin_layout Paragraph
In diesem Kapitel wird der DPLL-Algorithmus und CDCL-Algorithmus vorgestellt.
 Anhand einer Literaturarbeit werden die Erweiterung erläutert, die das
 CDCL-Verfahren performanter im Gegensatz zum DPLL machen.
\end_layout

\begin_layout Section
DPLL-Algorithmus
\end_layout

\begin_layout Standard
Martin Davis und Hilary Putnam entwickelten 1960 den Davis-Putnam-Algorithmus
 (DP) 
\begin_inset CommandInset citation
LatexCommand citeyear
key "davis_computing_1960"
literal "false"

\end_inset

, der als Basis für das 1962 entwickelte DPLL-Verfahren verwendet wird.
 Der Algorithmus wurde von Martin Davis, George Logemann und Donald Loveland
 präsentiert und besitzt drei Regeln 
\begin_inset CommandInset citation
LatexCommand citeyear
key "davis_machine_1962"
literal "false"

\end_inset

.
 
\end_layout

\begin_layout Standard
Die erste Regel ist die Eliminierung von Klauseln mit nur einem Literal
 
\begin_inset CommandInset citation
LatexCommand citeyear
key "davis_computing_1960"
literal "false"

\end_inset

.
 Mit dieser Regel wurden vier Teilregeln eingeführt.
 Diese sind folgende:
\end_layout

\begin_layout Enumerate
Existieren zwei atomare Klauseln mit gegenteiligen Literalen, wie z.B.
 
\begin_inset Formula $\{p\}$
\end_inset

 und
\begin_inset Formula $\{-p\}$
\end_inset

, so ist die Formel F UNSAT.
\end_layout

\begin_layout Enumerate
Existiert eine atomare Klausel mit nur einem positiven Literal p, so können
 alle Klauseln, die ein p beinhalten, gelöscht werden und alle negierten
 p's können aus den Klauseln entfernt werden.
\end_layout

\begin_layout Enumerate
Die dritte Teilregel ist wie die zweite Teilregel, jedoch mit umgekehrten
 Vorzeichen.
 
\end_layout

\begin_layout Enumerate
Die Formel ist SAT, wenn F nach anwenden der Regeln leer wird.
\end_layout

\begin_layout Standard
Die zweite Regel ist die 
\begin_inset Quotes gld
\end_inset

Affirmative-Negative Rule
\begin_inset Quotes grd
\end_inset

 
\begin_inset CommandInset citation
LatexCommand citeyear
key "davis_computing_1960"
literal "false"

\end_inset

.
 Diese Regel ist ähnlich zur Regel 1.2 und 1.3.
 Anstelle von atomaren Klauseln wird hier eine Entscheidung für ein Literal
 in einer Klausel getroffen.
 Wenn das Literal 
\begin_inset Formula $p$
\end_inset

 mit 
\begin_inset Formula $T$
\end_inset

 belegt wird, so werden alle Klauseln mit einem positiven 
\begin_inset Formula $p$
\end_inset

 gelöscht, während alle negativen 
\begin_inset Formula $p$
\end_inset

 aus den Klauseln gelöscht werden.
 Dies geschieht auch umgekehrt mit einer Belegung von 
\begin_inset Formula $F$
\end_inset

.
\end_layout

\begin_layout Standard
Als dritte Regel wurde die Teilungs Regel vorgestellt 
\begin_inset CommandInset citation
LatexCommand citeyear
key "davis_machine_1962"
literal "false"

\end_inset

.
 In dieser Regel wird eine Formel F in 
\begin_inset Formula $(A\vee p)\wedge(B\vee-p)\wedge R$
\end_inset

 aufgeteilt, wobei 
\begin_inset Formula $p$
\end_inset

 nicht in 
\begin_inset Formula $A,B$
\end_inset

 und 
\begin_inset Formula $R$
\end_inset

 ist.
 F wird UNSAT, wenn 
\begin_inset Formula $A\wedge R$
\end_inset

 und 
\begin_inset Formula $B\wedge R$
\end_inset

 beide inkonsistent sind.
 Dies bedeutet, wenn 
\begin_inset Formula $p=F$
\end_inset

 und 
\begin_inset Formula $A\wedge R$
\end_inset

 und 
\begin_inset Formula $p=T$
\end_inset

 und 
\begin_inset Formula $B\wedge R$
\end_inset

 inkonsistenz aufzeigen, so ist F UNSAT.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ein Beispiel wie die Regeln 1 und 2 funktionieren, wird an folgendem Problem
 gezeigt:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
F\,=\,1\,\wedge\,(-1\vee-2)\,\wedge\,(1\vee2)\,\wedge\,(3\vee4)\,\wedge\,(4\vee5)
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset

Setze 1 = T 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\Leftrightarrow2\,\wedge\,(3\vee4)\,\wedge\,(4\vee5)
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset

Setze 2 = T 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\Leftrightarrow(3\vee4)\,\wedge\,(4\vee5)
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset

Setze 4 = T 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\Rightarrow SAT
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Die zweite Teilregel der ersten Regel wird im ersten Schritt angewendet.
 Diese löscht alle Klauseln, welche eine positive 1 besitzen, und alle negativen
 1 in allen Klauseln.
 Dadurch kommt die Formel 
\begin_inset Formula $2\wedge(3\vee4)\wedge(4\vee5)$
\end_inset

 im zweiten Schritt zustande.
 Nach der Anwendung der dritten Teilregel für das Literal 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none
(-2
\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
) kommt die Formel 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $(3\vee4)\wedge(4\vee5)$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
 als Ergebnis heraus.
 Mit dem Einsetzen von 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\xout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $4=T$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\xout default
\uuline default
\uwave default
\noun default
\color inherit
 wird die zweite Regel benutzt, wodurch die leere Menge entsteht.
 Dadurch wird die gesamte Formel mit SAT evaluiert.
\end_layout

\begin_layout Standard
Wenn die Formel F jedoch noch eine atomare Klausel 
\begin_inset Formula $(-1)$
\end_inset

 besitzen würde, würde die Formel F als UNSAT evaluiert werden, da die erste
 Teilregel von Regel 1 bei zwei atomaren Klauseln mit unterschiedlichen
 Vorzeichen und gleichen Literalen die Formel als UNSAT beurteilt.
\end_layout

\begin_layout Section
CDCL-Algorithmus
\end_layout

\begin_layout Standard
Der CDCL-Algorithmus basiert auf den DPLL-Algorithmus und verwendet zusätzlich
 zu den Regeln mehrere Optimierungen und einen Algorithmus, welches dem
 CDCL seinem Namen verdankt.
 Optimierungen die mit 
\end_layout

\end_body
\end_document
